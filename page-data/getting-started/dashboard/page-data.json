{"componentChunkName":"component---src-pages-getting-started-dashboard-index-mdx","path":"/getting-started/dashboard/","result":{"pageContext":{"frontmatter":{"title":"Developer Dashboard"},"relativePagePath":"/getting-started/dashboard/index.mdx","titleType":"page","MdxNode":{"id":"6fa2cd11-17d5-5153-ba75-5db81bf273c3","children":[],"parent":"4dc8825c-3a0f-5edf-bd4b-a340d0c6ce93","internal":{"content":"---\ntitle: Developer Dashboard\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe <Globals name=\"env\" /> includes the Developer Dashboard\n\n</PageDescription>\n\nThe Developer Dashboard is one of the tools running in your <Globals name=\"env\" />. It is designed to help you navigate to the installed tools and give you a simple way to perform common developer tasks, such as:\n- **Dashboard**: Navigate to the tools installed in the cluster\n- **Activation**: Links to education to help you learn cloud-native development and deployment using IBM Cloud Kubernetes Service and Red Hat OpenShift on IBM Cloud\n- **<Globals name=\"templates\" />**: Links to templates that will help accelerate your project\n\n![Developer Dashboard](/images/developer-dashboard.png)\n\n### Opening the Dashboard\n\n- Open a terminal\n- Make sure you are logged into your Development cluster in a terminal.\n- To do so, navigate to your cluster in the _IBM Cloud Console_, click on the **Access** tab and\nfollow the instructions to login from the command line\n- You can test this with the following simple command.\n\n<Accordion>\n\n  <AccordionItem title=\"OpenShift\">\n\n    oc get pods\n\n  </AccordionItem>\n\n  <AccordionItem title=\"Kubernetes\">\n\n    kubectl get nodes\n\n  </AccordionItem>\n\n</Accordion>\n\n<p></p>\n\n- To open the Dashboard, use the [IGC CLI](/guides/cli).\n    ```\n    igc dashboard\n    ```\n\n- This will open the Dashboard\n\n### Access the tools URLs\n\n- To list the ingress endpoints for all of the installed tools, use the [Developer Tools CLI](../getting-started/cli) to run the following command:\n    ```bash\n    igc endpoints -n tools\n    ```\n\n- This will return the ingress URLs for all of the tools installed in the Developer Tools cluster.\n    ```bash\n   ? Endpoints in the 'tools' namespace. Select an endpoint to launch the default browser or 'Exit'.\n   \n     1) Exit\n     2) developer-dashboard - http://dashboard.garage-dev-ocp4-c-518489-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud\n     3) argocd-server - https://argocd-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     4) artifactory - https://artifactory-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     5) dashboard - https://dashboard-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     6) developer-dashboard - http://dashboard.garage-dev-ocp4-c-518489-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud\n   (Move up and down to reveal more choices)\n     Answer:\n    ```\n\n-  You can then select the URL to open the tools' dashboard directly.\n\n### Credentials\n\nIn the future, the tools in the Dashboard will be linked using a single sign-on (SSO) service. \nIn the meantime, the CLI includes a command to list the tools' logins.\n\n- To list the logins for all of the installed tools, use the [Developer Tools CLI](../getting-started/cli) to run the following command:\n    ```bash\n    igc credentials\n    ```\n\n- The command lists the `userid` and `password` for each tool installed. You can use these credentials to log into each of the installed tools.\n\n<InlineNotification>\n\nIf you are using OpenShift, the Jenkins credential\nwill be `undefined` because the OpenShift built in Jenkins service uses IBM cloud single sign-on mechanism.\n\n</InlineNotification>\n\n### Customizing the Tools view\n\nThe tools dashboard supports a collection of tools links. These links can be\n added to the <Globals name=\"env\" /> using the `igc` command line. This\n  enables a level of customization for the development. You can use this to\n   link out to your Cloud Pak main dashboards, or you can add a reference to\n    your Github project. \n    \n- To add a tool follow the syntax below.  \n    ```bash\n    igc tool-config --name <name of tool> --url <url of tool> \n    ```\n\nThe following is a list of supported tools that be configured for displayed.\n \n| Tool Name                | Name Parameter  | Description | Pre-Configured |\n| -----------------------  |:-------------- |:------------| :----------- |\n| GitLab | `gitlab`  | IBM Cloud GitLab instance for the region you are using | Yes |\n| Eclipse Che | `che` | Link to Eclipse Che instance | No |  \n| Jenkins | `jenkins` | If IKS configured by default | Yes |\n| Pipeline | `pipeline` | If OCP configured by default | Yes |\n| ArgoCD | `argocd` | Link to ArgoCD instance in cluster | Yes |\n| Artifactory | `artifactory` | Link to Artifactory instance in cluster | Yes |\n| SonarQube | `sonarqube` | Link to SonarQube instance in cluster | Yes |\n| Pact | `pact` | Link to Pact Broker instance in cluster | Yes |\n| Tekton | `tekton` | Link to Tekton Dashboard in cluster | No |\n| Transformation Advisor | `ta` | Link to Transformation Advisor tool in cluster | No |\n| Swagger Editor | `apieditor` | Link to Swagger Editor instance in cluster | Yes |\n| CodeReady Workspaces | `codeready` | Link to CodeReady Workspaces instance in cluster | No |\n| GitHub | `github` | Link to teams GitHub organization | Yes |\n| Cloud Pak for Integration | `integration` | Link to main console for Cloud Pak for Integration | No |\n| Cloud Pak for Multi Cloud Manager | `mcm` | Link to main console for Cloud Pak for Multi Cloud Manager | No |\n| Cloud Pak for Data | `data` | Link to main console for Cloud Pak for Data | No |\n| Cloud Pak for Automation | `automation` | Link to main console for Cloud Pak for Automation | No |\n","type":"Mdx","contentDigest":"f56b0dc69ee891969393ca50190e54a1","counter":508,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Developer Dashboard"},"exports":{},"rawBody":"---\ntitle: Developer Dashboard\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe <Globals name=\"env\" /> includes the Developer Dashboard\n\n</PageDescription>\n\nThe Developer Dashboard is one of the tools running in your <Globals name=\"env\" />. It is designed to help you navigate to the installed tools and give you a simple way to perform common developer tasks, such as:\n- **Dashboard**: Navigate to the tools installed in the cluster\n- **Activation**: Links to education to help you learn cloud-native development and deployment using IBM Cloud Kubernetes Service and Red Hat OpenShift on IBM Cloud\n- **<Globals name=\"templates\" />**: Links to templates that will help accelerate your project\n\n![Developer Dashboard](/images/developer-dashboard.png)\n\n### Opening the Dashboard\n\n- Open a terminal\n- Make sure you are logged into your Development cluster in a terminal.\n- To do so, navigate to your cluster in the _IBM Cloud Console_, click on the **Access** tab and\nfollow the instructions to login from the command line\n- You can test this with the following simple command.\n\n<Accordion>\n\n  <AccordionItem title=\"OpenShift\">\n\n    oc get pods\n\n  </AccordionItem>\n\n  <AccordionItem title=\"Kubernetes\">\n\n    kubectl get nodes\n\n  </AccordionItem>\n\n</Accordion>\n\n<p></p>\n\n- To open the Dashboard, use the [IGC CLI](/guides/cli).\n    ```\n    igc dashboard\n    ```\n\n- This will open the Dashboard\n\n### Access the tools URLs\n\n- To list the ingress endpoints for all of the installed tools, use the [Developer Tools CLI](../getting-started/cli) to run the following command:\n    ```bash\n    igc endpoints -n tools\n    ```\n\n- This will return the ingress URLs for all of the tools installed in the Developer Tools cluster.\n    ```bash\n   ? Endpoints in the 'tools' namespace. Select an endpoint to launch the default browser or 'Exit'.\n   \n     1) Exit\n     2) developer-dashboard - http://dashboard.garage-dev-ocp4-c-518489-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud\n     3) argocd-server - https://argocd-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     4) artifactory - https://artifactory-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     5) dashboard - https://dashboard-tools.gsi-learning-ocp311-clu-7ec5d722a0ab3f463fdc90eeb94dbc70-0001.eu-gb.containers.appdomain.cloud\n     6) developer-dashboard - http://dashboard.garage-dev-ocp4-c-518489-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud\n   (Move up and down to reveal more choices)\n     Answer:\n    ```\n\n-  You can then select the URL to open the tools' dashboard directly.\n\n### Credentials\n\nIn the future, the tools in the Dashboard will be linked using a single sign-on (SSO) service. \nIn the meantime, the CLI includes a command to list the tools' logins.\n\n- To list the logins for all of the installed tools, use the [Developer Tools CLI](../getting-started/cli) to run the following command:\n    ```bash\n    igc credentials\n    ```\n\n- The command lists the `userid` and `password` for each tool installed. You can use these credentials to log into each of the installed tools.\n\n<InlineNotification>\n\nIf you are using OpenShift, the Jenkins credential\nwill be `undefined` because the OpenShift built in Jenkins service uses IBM cloud single sign-on mechanism.\n\n</InlineNotification>\n\n### Customizing the Tools view\n\nThe tools dashboard supports a collection of tools links. These links can be\n added to the <Globals name=\"env\" /> using the `igc` command line. This\n  enables a level of customization for the development. You can use this to\n   link out to your Cloud Pak main dashboards, or you can add a reference to\n    your Github project. \n    \n- To add a tool follow the syntax below.  \n    ```bash\n    igc tool-config --name <name of tool> --url <url of tool> \n    ```\n\nThe following is a list of supported tools that be configured for displayed.\n \n| Tool Name                | Name Parameter  | Description | Pre-Configured |\n| -----------------------  |:-------------- |:------------| :----------- |\n| GitLab | `gitlab`  | IBM Cloud GitLab instance for the region you are using | Yes |\n| Eclipse Che | `che` | Link to Eclipse Che instance | No |  \n| Jenkins | `jenkins` | If IKS configured by default | Yes |\n| Pipeline | `pipeline` | If OCP configured by default | Yes |\n| ArgoCD | `argocd` | Link to ArgoCD instance in cluster | Yes |\n| Artifactory | `artifactory` | Link to Artifactory instance in cluster | Yes |\n| SonarQube | `sonarqube` | Link to SonarQube instance in cluster | Yes |\n| Pact | `pact` | Link to Pact Broker instance in cluster | Yes |\n| Tekton | `tekton` | Link to Tekton Dashboard in cluster | No |\n| Transformation Advisor | `ta` | Link to Transformation Advisor tool in cluster | No |\n| Swagger Editor | `apieditor` | Link to Swagger Editor instance in cluster | Yes |\n| CodeReady Workspaces | `codeready` | Link to CodeReady Workspaces instance in cluster | No |\n| GitHub | `github` | Link to teams GitHub organization | Yes |\n| Cloud Pak for Integration | `integration` | Link to main console for Cloud Pak for Integration | No |\n| Cloud Pak for Multi Cloud Manager | `mcm` | Link to main console for Cloud Pak for Multi Cloud Manager | No |\n| Cloud Pak for Data | `data` | Link to main console for Cloud Pak for Data | No |\n| Cloud Pak for Automation | `automation` | Link to main console for Cloud Pak for Automation | No |\n","fileAbsolutePath":"/home/travis/build/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/getting-started/dashboard/index.mdx"}}}}